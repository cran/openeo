% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ops.R
\name{group_ops}
\alias{group_ops}
\alias{sum.ProcessNode}
\alias{sum.ProcessGraphParameter}
\alias{sum.list}
\alias{prod.ProcessNode}
\alias{prod.ProcessGraphParameter}
\alias{prod.list}
\alias{min.ProcessNode}
\alias{min.ProcessGraphParameter}
\alias{min.list}
\alias{max.ProcessNode}
\alias{max.ProcessGraphParameter}
\alias{max.list}
\alias{range.ProcessNode}
\alias{range.ProcessGraphParameter}
\alias{range.list}
\alias{mean.ProcessNode}
\alias{mean.ProcessGraphParameter}
\alias{mean.list}
\alias{median.ProcessNode}
\alias{median.ProcessGraphParameter}
\alias{median.list}
\alias{sd.ProcessNode}
\alias{sd.ProcessGraphParameter}
\alias{sd.list}
\alias{var.ProcessNode}
\alias{var.ProcessGraphParameter}
\alias{var.list}
\title{Group operator wrappers}
\usage{
\method{sum}{ProcessNode}(..., na.rm = FALSE)

\method{sum}{ProcessGraphParameter}(..., na.rm = FALSE)

\method{sum}{list}(..., na.rm = FALSE)

\method{prod}{ProcessNode}(..., na.rm = TRUE)

\method{prod}{ProcessGraphParameter}(..., na.rm = TRUE)

\method{prod}{list}(..., na.rm = TRUE)

\method{min}{ProcessNode}(..., na.rm = TRUE)

\method{min}{ProcessGraphParameter}(..., na.rm = TRUE)

\method{min}{list}(..., na.rm = TRUE)

\method{max}{ProcessNode}(..., na.rm = TRUE)

\method{max}{ProcessGraphParameter}(..., na.rm = TRUE)

\method{max}{list}(..., na.rm = TRUE)

\method{range}{ProcessNode}(..., na.rm = TRUE)

\method{range}{ProcessGraphParameter}(..., na.rm = TRUE)

\method{range}{list}(..., na.rm = TRUE)

\method{mean}{ProcessNode}(x, na.rm = FALSE, ...)

\method{mean}{ProcessGraphParameter}(x, na.rm = FALSE, ...)

\method{mean}{list}(x, na.rm = FALSE, ...)

\method{median}{ProcessNode}(x, na.rm = FALSE, ...)

\method{median}{ProcessGraphParameter}(x, na.rm = FALSE, ...)

\method{median}{list}(x, na.rm = FALSE, ...)

sd.ProcessNode(x, na.rm = FALSE)

sd.ProcessGraphParameter(x, na.rm = FALSE)

sd.list(x, na.rm = FALSE)

var.ProcessNode(x, na.rm = FALSE)

var.ProcessGraphParameter(x, na.rm = FALSE)

var.list(x, na.rm = FALSE)
}
\arguments{
\item{...}{multiple arguments that start with a \code{\link{ProcessNode}} or a \code{\link{ProcessGraphParameter}}}

\item{na.rm}{logical to determine if NA values shall be removed in the calculation}

\item{x}{a vector or list of values that are mixed or consist fully of \code{\link{ProcessNode}},
\code{\link{ProcessGraphParameter}} or numerical values}
}
\value{
\code{\link{ProcessNode}}
}
\description{
R's mathematical group primitives that are translated to openEO processes.
}
\details{
The \code{...} parameter is required to start with the \code{\link{ProcessNode}} or a \code{\link{ProcessGraphParameter}} that returns
a numeric value. If it starts with a number the corresponding function in base R will be used, which will result in most cases in
an error because base R cannot interprete the ProcessNode and ProcessGraphParameter objects. In that case you need to reorder the
elements so that \link[=group_ops]{openeo's group operators} will be used.
}
