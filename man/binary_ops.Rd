% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ops.R
\name{binary_ops}
\alias{binary_ops}
\alias{+.ProcessNode}
\alias{+.ProcessGraphParameter}
\alias{-.ProcessNode}
\alias{-.ProcessGraphParameter}
\alias{*.ProcessNode}
\alias{*.ProcessGraphParameter}
\alias{/.ProcessNode}
\alias{/.ProcessGraphParameter}
\alias{^.ProcessNode}
\alias{^.ProcessGraphParameter}
\alias{\%\%.ProcessNode}
\alias{\%\%.ProcessGraphParameter}
\alias{&.ProcessNode}
\alias{&.ProcessGraphParameter}
\alias{|.ProcessNode}
\alias{|.ProcessGraphParameter}
\alias{xor.ProcessNode}
\alias{xor.ProcessGraphParameter}
\alias{==.ProcessNode}
\alias{==.ProcessGraphParameter}
\alias{!=.ProcessNode}
\alias{!=.ProcessGraphParameter}
\alias{<.ProcessNode}
\alias{<.ProcessGraphParameter}
\alias{<=.ProcessNode}
\alias{<=.ProcessGraphParameter}
\alias{>=.ProcessNode}
\alias{>=.ProcessGraphParameter}
\alias{>.ProcessNode}
\alias{>.ProcessGraphParameter}
\title{Binary function wrappers}
\usage{
\method{+}{ProcessNode}(e1, e2)

\method{+}{ProcessGraphParameter}(e1, e2)

\method{-}{ProcessNode}(e1, e2)

\method{-}{ProcessGraphParameter}(e1, e2)

\method{*}{ProcessNode}(e1, e2)

\method{*}{ProcessGraphParameter}(e1, e2)

\method{/}{ProcessNode}(e1, e2)

\method{/}{ProcessGraphParameter}(e1, e2)

\method{^}{ProcessNode}(e1, e2)

\method{^}{ProcessGraphParameter}(e1, e2)

\method{\%\%}{ProcessNode}(e1, e2)

\method{\%\%}{ProcessGraphParameter}(e1, e2)

\method{&}{ProcessNode}(e1, e2)

\method{&}{ProcessGraphParameter}(e1, e2)

\method{|}{ProcessNode}(e1, e2)

\method{|}{ProcessGraphParameter}(e1, e2)

xor.ProcessNode(x, y)

xor.ProcessGraphParameter(x, y)

\method{==}{ProcessNode}(e1, e2)

\method{==}{ProcessGraphParameter}(e1, e2)

\method{!=}{ProcessNode}(e1, e2)

\method{!=}{ProcessGraphParameter}(e1, e2)

\method{<}{ProcessNode}(e1, e2)

\method{<}{ProcessGraphParameter}(e1, e2)

\method{<=}{ProcessNode}(e1, e2)

\method{<=}{ProcessGraphParameter}(e1, e2)

\method{>=}{ProcessNode}(e1, e2)

\method{>=}{ProcessGraphParameter}(e1, e2)

\method{>}{ProcessNode}(e1, e2)

\method{>}{ProcessGraphParameter}(e1, e2)
}
\arguments{
\item{e1}{\code{ProcessGraphParameter}, \code{ProcessNode} or a list or vector, which internal data is passed into
the function or a numeric value}

\item{e2}{same as e1}

\item{x}{the first expression in the xor statement}

\item{y}{the second expression in the xor statement}
}
\value{
a \code{ProcessNode}
}
\description{
The functions here are used in combination with \code{ProcessGraphParameter} and \code{ProcessNode} in order to make
it easier to write arithmetic functions for openEO user defined processes in R. The functions map into their openEO
processes counterparts.
}
